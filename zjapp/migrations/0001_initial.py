# -*- coding: utf-8 -*-
# Generated by Django 1.11.10 on 2018-05-14 10:10
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CustomerModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FinanceModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='MarketModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='OrderProjectModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(default=0, help_text='\u6570\u91cf')),
                ('suggest_price', models.FloatField(default=0.0, help_text='\u5356\u65b9\u5efa\u8bae\u96f6\u552e\u4ef7')),
                ('purchase_price', models.FloatField(default=0.0, help_text='\u91c7\u8d2d\u5355\u4ef7')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, help_text='\u4ea7\u54c1\u7f16\u7801', max_length=255, null=True)),
                ('brand_name', models.CharField(blank=True, help_text='\u54c1\u724c\u540d\u79f0', max_length=255, null=True)),
                ('name', models.CharField(blank=True, help_text='\u4ea7\u54c1\u540d\u79f0', max_length=255, null=True)),
                ('images', models.CharField(blank=True, help_text='\u56fe\u7247', max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseOrderModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, help_text='\u8ba2\u5355\u53f7', max_length=255, null=True)),
                ('all_pre_pay_count', models.IntegerField(default=0, help_text='\u5168\u989d\u9884\u4ed8\u8d27\u7269\u6570')),
                ('all_pre_pay_date', models.DateField(blank=True, help_text='\u5168\u989d\u9884\u4ed8\u65e5\u671f', null=True)),
                ('all_pre_pay_money', models.FloatField(blank=True, help_text='\u5168\u989d\u9884\u4ed8\u91d1\u989d', null=True)),
                ('pre_pay_ratio', models.FloatField(default=0.0, help_text='\u9884\u4ed8\u6bd4\u4f8b')),
                ('pre_pay_date', models.DateField(blank=True, help_text='\u9884\u4ed8\u65e5\u671f', null=True)),
                ('pre_pay_money', models.FloatField(blank=True, help_text='\u9884\u4ed8\u91d1\u989d', null=True)),
                ('count', models.IntegerField(default=0, help_text='\u8d27\u7269\u6570\u91cf')),
                ('balance_pay_money', models.FloatField(default=0.0, help_text='\u5c3e\u6b3e\u91d1\u989d')),
                ('balance_pay_date', models.DateField(blank=True, help_text='\u5c3e\u6b3e\u65e5\u671f', null=True)),
                ('all_mongey', models.FloatField(default=0.0, help_text='\u603b\u8d27\u503c')),
                ('mark', models.TextField(blank=True, help_text='\u5907\u6ce8', null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='\u521b\u5efa\u65e5\u671f')),
            ],
        ),
        migrations.CreateModel(
            name='StockrModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='SupplierModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.AddField(
            model_name='orderprojectmodel',
            name='order',
            field=models.ForeignKey(help_text='\u8ba2\u5355', on_delete=django.db.models.deletion.CASCADE, related_name='order_project', to='zjapp.PurchaseOrderModel'),
        ),
        migrations.AddField(
            model_name='orderprojectmodel',
            name='project',
            field=models.ForeignKey(help_text='\u4ea7\u54c1', on_delete=django.db.models.deletion.CASCADE, related_name='project_order', to='zjapp.ProjectModel'),
        ),
    ]
